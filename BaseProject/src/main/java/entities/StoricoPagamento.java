package entities;
// Generated Apr 25, 2018 3:42:43 PM by Hibernate Tools 5.1.0.Alpha1

import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * StoricoPagamento generated by hbm2java
 */
@Entity
@Table(name = "storico_pagamento", catalog = "db_inv_freel")
public class StoricoPagamento implements java.io.Serializable, entities.Entity {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private Integer rowId;
	private Progetto progetto;
	private StatoPagamento statoPagamento;
	private Utente utenteByIdFreelancer;
	private Utente utenteByIdInvestor;
	private String idSottoinsieme;
	private Double importo;
	private Date dataCreazione;

	public StoricoPagamento() {
	}

	public StoricoPagamento(StatoPagamento statoPagamento, String idSottoinsieme, Date dataCreazione) {
		this.statoPagamento = statoPagamento;
		this.idSottoinsieme = idSottoinsieme;
		this.dataCreazione = dataCreazione;
	}

	public StoricoPagamento(Progetto progetto, StatoPagamento statoPagamento, Utente utenteByIdFreelancer,
			Utente utenteByIdInvestor, String idSottoinsieme, Double importo, Date dataCreazione) {
		this.progetto = progetto;
		this.statoPagamento = statoPagamento;
		this.utenteByIdFreelancer = utenteByIdFreelancer;
		this.utenteByIdInvestor = utenteByIdInvestor;
		this.idSottoinsieme = idSottoinsieme;
		this.importo = importo;
		this.dataCreazione = dataCreazione;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "ROW_ID", unique = true, nullable = false)
	public Integer getRowId() {
		return this.rowId;
	}

	public void setRowId(Integer rowId) {
		this.rowId = rowId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "ID_PROGETTO")
	public Progetto getProgetto() {
		return this.progetto;
	}

	public void setProgetto(Progetto progetto) {
		this.progetto = progetto;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "STATO", nullable = false)
	public StatoPagamento getStatoPagamento() {
		return this.statoPagamento;
	}

	public void setStatoPagamento(StatoPagamento statoPagamento) {
		this.statoPagamento = statoPagamento;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "ID_FREELANCER")
	public Utente getUtenteByIdFreelancer() {
		return this.utenteByIdFreelancer;
	}

	public void setUtenteByIdFreelancer(Utente utenteByIdFreelancer) {
		this.utenteByIdFreelancer = utenteByIdFreelancer;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "ID_INVESTOR")
	public Utente getUtenteByIdInvestor() {
		return this.utenteByIdInvestor;
	}

	public void setUtenteByIdInvestor(Utente utenteByIdInvestor) {
		this.utenteByIdInvestor = utenteByIdInvestor;
	}

	@Column(name = "ID_SOTTOINSIEME", nullable = false, length = 45)
	public String getIdSottoinsieme() {
		return this.idSottoinsieme;
	}

	public void setIdSottoinsieme(String idSottoinsieme) {
		this.idSottoinsieme = idSottoinsieme;
	}

	@Column(name = "IMPORTO", precision = 22, scale = 0)
	public Double getImporto() {
		return this.importo;
	}

	public void setImporto(Double importo) {
		this.importo = importo;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "DATA_CREAZIONE", nullable = false, length = 19)
	public Date getDataCreazione() {
		return this.dataCreazione;
	}

	public void setDataCreazione(Date dataCreazione) {
		this.dataCreazione = dataCreazione;
	}

}
