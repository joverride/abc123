package entities;
// Generated Apr 25, 2018 3:42:43 PM by Hibernate Tools 5.1.0.Alpha1

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Utente generated by hbm2java
 */
@Entity
@Table(name = "utente", catalog = "db_inv_freel")
public class Utente implements java.io.Serializable {

	private Integer rowId;
	private TipologiaUtente tipologiaUtente;
	private String ragioneSociale;
	private String nome;
	private String cognome;
	private Character sesso;
	private String indirizzo;
	private String cap;
	private String comune;
	private String provincia;
	private String nazione;
	private String piva;
	private String cf;
	private String email;
	private String iban;
	private String telefono1;
	private String telefono2;
	private Date dataNascita;
	private Date timestampCreazione;
	private Date timestampModifica;
	private Set<UtenteSpecifico> utenteSpecificos = new HashSet<UtenteSpecifico>(0);
	private Set<Offerta> offertas = new HashSet<Offerta>(0);
	private Set<Messaggio> messaggiosForIdMittente = new HashSet<Messaggio>(0);
	private Set<Messaggio> messaggiosForIdDestinatario = new HashSet<Messaggio>(0);
	private Set<Fattura> fatturas = new HashSet<Fattura>(0);
	private Set<Feedback> feedbacksForRicevutoDa = new HashSet<Feedback>(0);
	private Set<StoricoPagamento> storicoPagamentosForIdFreelancer = new HashSet<StoricoPagamento>(0);
	private StoricoProgetto storicoProgetto;
	private Set<Feedback> feedbacksForRilasciatoDa = new HashSet<Feedback>(0);
	private Set<StoricoPagamento> storicoPagamentosForIdInvestor = new HashSet<StoricoPagamento>(0);

	public Utente() {
	}

	public Utente(TipologiaUtente tipologiaUtente, String email, Date timestampCreazione, Date timestampModifica) {
		this.tipologiaUtente = tipologiaUtente;
		this.email = email;
		this.timestampCreazione = timestampCreazione;
		this.timestampModifica = timestampModifica;
	}

	public Utente(TipologiaUtente tipologiaUtente, String ragioneSociale, String nome, String cognome, Character sesso,
			String indirizzo, String cap, String comune, String provincia, String nazione, String piva, String cf,
			String email, String iban, String telefono1, String telefono2, Date dataNascita, Date timestampCreazione,
			Date timestampModifica, Set<UtenteSpecifico> utenteSpecificos, Set<Offerta> offertas,
			Set<Messaggio> messaggiosForIdMittente, Set<Messaggio> messaggiosForIdDestinatario, Set<Fattura> fatturas,
			Set<Feedback> feedbacksForRicevutoDa, Set<StoricoPagamento> storicoPagamentosForIdFreelancer,
			StoricoProgetto storicoProgetto, Set<Feedback> feedbacksForRilasciatoDa,
			Set<StoricoPagamento> storicoPagamentosForIdInvestor) {
		this.tipologiaUtente = tipologiaUtente;
		this.ragioneSociale = ragioneSociale;
		this.nome = nome;
		this.cognome = cognome;
		this.sesso = sesso;
		this.indirizzo = indirizzo;
		this.cap = cap;
		this.comune = comune;
		this.provincia = provincia;
		this.nazione = nazione;
		this.piva = piva;
		this.cf = cf;
		this.email = email;
		this.iban = iban;
		this.telefono1 = telefono1;
		this.telefono2 = telefono2;
		this.dataNascita = dataNascita;
		this.timestampCreazione = timestampCreazione;
		this.timestampModifica = timestampModifica;
		this.utenteSpecificos = utenteSpecificos;
		this.offertas = offertas;
		this.messaggiosForIdMittente = messaggiosForIdMittente;
		this.messaggiosForIdDestinatario = messaggiosForIdDestinatario;
		this.fatturas = fatturas;
		this.feedbacksForRicevutoDa = feedbacksForRicevutoDa;
		this.storicoPagamentosForIdFreelancer = storicoPagamentosForIdFreelancer;
		this.storicoProgetto = storicoProgetto;
		this.feedbacksForRilasciatoDa = feedbacksForRilasciatoDa;
		this.storicoPagamentosForIdInvestor = storicoPagamentosForIdInvestor;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "ROW_ID", unique = true, nullable = false)
	public Integer getRowId() {
		return this.rowId;
	}

	public void setRowId(Integer rowId) {
		this.rowId = rowId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "TIPOLOGIA_UTENTE", nullable = false)
	public TipologiaUtente getTipologiaUtente() {
		return this.tipologiaUtente;
	}

	public void setTipologiaUtente(TipologiaUtente tipologiaUtente) {
		this.tipologiaUtente = tipologiaUtente;
	}

	@Column(name = "RAGIONE_SOCIALE")
	public String getRagioneSociale() {
		return this.ragioneSociale;
	}

	public void setRagioneSociale(String ragioneSociale) {
		this.ragioneSociale = ragioneSociale;
	}

	@Column(name = "NOME")
	public String getNome() {
		return this.nome;
	}

	public void setNome(String nome) {
		this.nome = nome;
	}

	@Column(name = "COGNOME")
	public String getCognome() {
		return this.cognome;
	}

	public void setCognome(String cognome) {
		this.cognome = cognome;
	}

	@Column(name = "SESSO", length = 1)
	public Character getSesso() {
		return this.sesso;
	}

	public void setSesso(Character sesso) {
		this.sesso = sesso;
	}

	@Column(name = "INDIRIZZO")
	public String getIndirizzo() {
		return this.indirizzo;
	}

	public void setIndirizzo(String indirizzo) {
		this.indirizzo = indirizzo;
	}

	@Column(name = "CAP", length = 5)
	public String getCap() {
		return this.cap;
	}

	public void setCap(String cap) {
		this.cap = cap;
	}

	@Column(name = "COMUNE")
	public String getComune() {
		return this.comune;
	}

	public void setComune(String comune) {
		this.comune = comune;
	}

	@Column(name = "PROVINCIA")
	public String getProvincia() {
		return this.provincia;
	}

	public void setProvincia(String provincia) {
		this.provincia = provincia;
	}

	@Column(name = "NAZIONE")
	public String getNazione() {
		return this.nazione;
	}

	public void setNazione(String nazione) {
		this.nazione = nazione;
	}

	@Column(name = "PIVA", length = 11)
	public String getPiva() {
		return this.piva;
	}

	public void setPiva(String piva) {
		this.piva = piva;
	}

	@Column(name = "CF", length = 16)
	public String getCf() {
		return this.cf;
	}

	public void setCf(String cf) {
		this.cf = cf;
	}

	@Column(name = "EMAIL", nullable = false)
	public String getEmail() {
		return this.email;
	}

	public void setEmail(String email) {
		this.email = email;
	}

	@Column(name = "IBAN", length = 31)
	public String getIban() {
		return this.iban;
	}

	public void setIban(String iban) {
		this.iban = iban;
	}

	@Column(name = "TELEFONO1", length = 25)
	public String getTelefono1() {
		return this.telefono1;
	}

	public void setTelefono1(String telefono1) {
		this.telefono1 = telefono1;
	}

	@Column(name = "TELEFONO2", length = 25)
	public String getTelefono2() {
		return this.telefono2;
	}

	public void setTelefono2(String telefono2) {
		this.telefono2 = telefono2;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "DATA_NASCITA", length = 10)
	public Date getDataNascita() {
		return this.dataNascita;
	}

	public void setDataNascita(Date dataNascita) {
		this.dataNascita = dataNascita;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "TIMESTAMP_CREAZIONE", nullable = false, length = 19)
	public Date getTimestampCreazione() {
		return this.timestampCreazione;
	}

	public void setTimestampCreazione(Date timestampCreazione) {
		this.timestampCreazione = timestampCreazione;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "TIMESTAMP_MODIFICA", nullable = false, length = 19)
	public Date getTimestampModifica() {
		return this.timestampModifica;
	}

	public void setTimestampModifica(Date timestampModifica) {
		this.timestampModifica = timestampModifica;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "utente")
	public Set<UtenteSpecifico> getUtenteSpecificos() {
		return this.utenteSpecificos;
	}

	public void setUtenteSpecificos(Set<UtenteSpecifico> utenteSpecificos) {
		this.utenteSpecificos = utenteSpecificos;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "utente")
	public Set<Offerta> getOffertas() {
		return this.offertas;
	}

	public void setOffertas(Set<Offerta> offertas) {
		this.offertas = offertas;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "utenteByIdMittente")
	public Set<Messaggio> getMessaggiosForIdMittente() {
		return this.messaggiosForIdMittente;
	}

	public void setMessaggiosForIdMittente(Set<Messaggio> messaggiosForIdMittente) {
		this.messaggiosForIdMittente = messaggiosForIdMittente;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "utenteByIdDestinatario")
	public Set<Messaggio> getMessaggiosForIdDestinatario() {
		return this.messaggiosForIdDestinatario;
	}

	public void setMessaggiosForIdDestinatario(Set<Messaggio> messaggiosForIdDestinatario) {
		this.messaggiosForIdDestinatario = messaggiosForIdDestinatario;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "utente")
	public Set<Fattura> getFatturas() {
		return this.fatturas;
	}

	public void setFatturas(Set<Fattura> fatturas) {
		this.fatturas = fatturas;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "utenteByRicevutoDa")
	public Set<Feedback> getFeedbacksForRicevutoDa() {
		return this.feedbacksForRicevutoDa;
	}

	public void setFeedbacksForRicevutoDa(Set<Feedback> feedbacksForRicevutoDa) {
		this.feedbacksForRicevutoDa = feedbacksForRicevutoDa;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "utenteByIdFreelancer")
	public Set<StoricoPagamento> getStoricoPagamentosForIdFreelancer() {
		return this.storicoPagamentosForIdFreelancer;
	}

	public void setStoricoPagamentosForIdFreelancer(Set<StoricoPagamento> storicoPagamentosForIdFreelancer) {
		this.storicoPagamentosForIdFreelancer = storicoPagamentosForIdFreelancer;
	}

	@OneToOne(fetch = FetchType.LAZY, mappedBy = "utente")
	public StoricoProgetto getStoricoProgetto() {
		return this.storicoProgetto;
	}

	public void setStoricoProgetto(StoricoProgetto storicoProgetto) {
		this.storicoProgetto = storicoProgetto;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "utenteByRilasciatoDa")
	public Set<Feedback> getFeedbacksForRilasciatoDa() {
		return this.feedbacksForRilasciatoDa;
	}

	public void setFeedbacksForRilasciatoDa(Set<Feedback> feedbacksForRilasciatoDa) {
		this.feedbacksForRilasciatoDa = feedbacksForRilasciatoDa;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "utenteByIdInvestor")
	public Set<StoricoPagamento> getStoricoPagamentosForIdInvestor() {
		return this.storicoPagamentosForIdInvestor;
	}

	public void setStoricoPagamentosForIdInvestor(Set<StoricoPagamento> storicoPagamentosForIdInvestor) {
		this.storicoPagamentosForIdInvestor = storicoPagamentosForIdInvestor;
	}

}
