package entities;
// Generated Apr 25, 2018 3:42:43 PM by Hibernate Tools 5.1.0.Alpha1

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;

/**
 * UtenteSpecifico generated by hbm2java
 */
@Entity
@Table(name = "utente_specifico", catalog = "db_inv_freel", uniqueConstraints = @UniqueConstraint(columnNames = "ROW_ID"))
public class UtenteSpecifico implements java.io.Serializable, entities.Entity {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private UtenteSpecificoId id;
	private TipoUtente tipoUtente;
	private Utente utente;
	private String esperienzeStudio;
	private String esperienzeProfessionali;
	private String descrizioneProfilo;
	private String img;
	private String prezzoOra;
	private Date timestampCreazione;
	private Date timestampModifica;
	private Set<UtenteTag> utenteTags = new HashSet<UtenteTag>(0);

	public UtenteSpecifico() {
	}

	public UtenteSpecifico(UtenteSpecificoId id, TipoUtente tipoUtente, Utente utente, Date timestampCreazione,
			Date timestampModifica) {
		this.id = id;
		this.tipoUtente = tipoUtente;
		this.utente = utente;
		this.timestampCreazione = timestampCreazione;
		this.timestampModifica = timestampModifica;
	}

	public UtenteSpecifico(UtenteSpecificoId id, TipoUtente tipoUtente, Utente utente, String esperienzeStudio,
			String esperienzeProfessionali, String descrizioneProfilo, String img, String prezzoOra,
			Date timestampCreazione, Date timestampModifica, Set<UtenteTag> utenteTags) {
		this.id = id;
		this.tipoUtente = tipoUtente;
		this.utente = utente;
		this.esperienzeStudio = esperienzeStudio;
		this.esperienzeProfessionali = esperienzeProfessionali;
		this.descrizioneProfilo = descrizioneProfilo;
		this.img = img;
		this.prezzoOra = prezzoOra;
		this.timestampCreazione = timestampCreazione;
		this.timestampModifica = timestampModifica;
		this.utenteTags = utenteTags;
	}

	@EmbeddedId

	@AttributeOverrides({
			@AttributeOverride(name = "rowId", column = @Column(name = "ROW_ID", unique = true, nullable = false)),
			@AttributeOverride(name = "rowIdUtente", column = @Column(name = "ROW_ID_UTENTE", nullable = false)) })
	public UtenteSpecificoId getId() {
		return this.id;
	}

	public void setId(UtenteSpecificoId id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "TIPO_UTENTE", nullable = false)
	public TipoUtente getTipoUtente() {
		return this.tipoUtente;
	}

	public void setTipoUtente(TipoUtente tipoUtente) {
		this.tipoUtente = tipoUtente;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "ROW_ID_UTENTE", nullable = false, insertable = false, updatable = false)
	public Utente getUtente() {
		return this.utente;
	}

	public void setUtente(Utente utente) {
		this.utente = utente;
	}

	@Column(name = "ESPERIENZE_STUDIO", length = 16777215)
	public String getEsperienzeStudio() {
		return this.esperienzeStudio;
	}

	public void setEsperienzeStudio(String esperienzeStudio) {
		this.esperienzeStudio = esperienzeStudio;
	}

	@Column(name = "ESPERIENZE_PROFESSIONALI", length = 16777215)
	public String getEsperienzeProfessionali() {
		return this.esperienzeProfessionali;
	}

	public void setEsperienzeProfessionali(String esperienzeProfessionali) {
		this.esperienzeProfessionali = esperienzeProfessionali;
	}

	@Column(name = "DESCRIZIONE_PROFILO", length = 16777215)
	public String getDescrizioneProfilo() {
		return this.descrizioneProfilo;
	}

	public void setDescrizioneProfilo(String descrizioneProfilo) {
		this.descrizioneProfilo = descrizioneProfilo;
	}

	@Column(name = "IMG")
	public String getImg() {
		return this.img;
	}

	public void setImg(String img) {
		this.img = img;
	}

	@Column(name = "PREZZO_ORA", length = 45)
	public String getPrezzoOra() {
		return this.prezzoOra;
	}

	public void setPrezzoOra(String prezzoOra) {
		this.prezzoOra = prezzoOra;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "TIMESTAMP_CREAZIONE", nullable = false, length = 19)
	public Date getTimestampCreazione() {
		return this.timestampCreazione;
	}

	public void setTimestampCreazione(Date timestampCreazione) {
		this.timestampCreazione = timestampCreazione;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "TIMESTAMP_MODIFICA", nullable = false, length = 19)
	public Date getTimestampModifica() {
		return this.timestampModifica;
	}

	public void setTimestampModifica(Date timestampModifica) {
		this.timestampModifica = timestampModifica;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "utenteSpecifico")
	public Set<UtenteTag> getUtenteTags() {
		return this.utenteTags;
	}

	public void setUtenteTags(Set<UtenteTag> utenteTags) {
		this.utenteTags = utenteTags;
	}

}
