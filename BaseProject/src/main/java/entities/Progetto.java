package entities;
// Generated Apr 25, 2018 3:42:43 PM by Hibernate Tools 5.1.0.Alpha1

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Progetto generated by hbm2java
 */
@Entity
@Table(name = "progetto", catalog = "db_inv_freel")
public class Progetto implements java.io.Serializable, entities.Entity {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private Integer rowId;
	private String titolo;
	private String descrizioneBreve;
	private String descrizioneCompleta;
	private double prezzoIniziale;
	private boolean accettaPropostePrezzo;
	private boolean visibileFreelancer;
	private Date dataFinePrevista;
	private Date timestampCreazione;
	private Date timestampModifica;
	private StoricoProgetto storicoProgetto;
	private Set<Messaggio> messaggios = new HashSet<Messaggio>(0);
	private Set<File> files = new HashSet<File>(0);
	private Set<StoricoPagamento> storicoPagamentos = new HashSet<StoricoPagamento>(0);
	private Set<AnnuncioProgetto> annuncioProgettos = new HashSet<AnnuncioProgetto>(0);
	private Set<Feedback> feedbacks = new HashSet<Feedback>(0);

	public Progetto() {
	}

	public Progetto(String titolo, String descrizioneBreve, String descrizioneCompleta, double prezzoIniziale,
			boolean accettaPropostePrezzo, boolean visibileFreelancer, Date timestampCreazione,
			Date timestampModifica) {
		this.titolo = titolo;
		this.descrizioneBreve = descrizioneBreve;
		this.descrizioneCompleta = descrizioneCompleta;
		this.prezzoIniziale = prezzoIniziale;
		this.accettaPropostePrezzo = accettaPropostePrezzo;
		this.visibileFreelancer = visibileFreelancer;
		this.timestampCreazione = timestampCreazione;
		this.timestampModifica = timestampModifica;
	}

	public Progetto(String titolo, String descrizioneBreve, String descrizioneCompleta, double prezzoIniziale,
			boolean accettaPropostePrezzo, boolean visibileFreelancer, Date dataFinePrevista, Date timestampCreazione,
			Date timestampModifica, StoricoProgetto storicoProgetto, Set<Messaggio> messaggios, Set<File> files,
			Set<StoricoPagamento> storicoPagamentos, Set<AnnuncioProgetto> annuncioProgettos, Set<Feedback> feedbacks) {
		this.titolo = titolo;
		this.descrizioneBreve = descrizioneBreve;
		this.descrizioneCompleta = descrizioneCompleta;
		this.prezzoIniziale = prezzoIniziale;
		this.accettaPropostePrezzo = accettaPropostePrezzo;
		this.visibileFreelancer = visibileFreelancer;
		this.dataFinePrevista = dataFinePrevista;
		this.timestampCreazione = timestampCreazione;
		this.timestampModifica = timestampModifica;
		this.storicoProgetto = storicoProgetto;
		this.messaggios = messaggios;
		this.files = files;
		this.storicoPagamentos = storicoPagamentos;
		this.annuncioProgettos = annuncioProgettos;
		this.feedbacks = feedbacks;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "ROW_ID", unique = true, nullable = false)
	public Integer getRowId() {
		return this.rowId;
	}

	public void setRowId(Integer rowId) {
		this.rowId = rowId;
	}

	@Column(name = "TITOLO", nullable = false)
	public String getTitolo() {
		return this.titolo;
	}

	public void setTitolo(String titolo) {
		this.titolo = titolo;
	}

	@Column(name = "DESCRIZIONE_BREVE", nullable = false)
	public String getDescrizioneBreve() {
		return this.descrizioneBreve;
	}

	public void setDescrizioneBreve(String descrizioneBreve) {
		this.descrizioneBreve = descrizioneBreve;
	}

	@Column(name = "DESCRIZIONE_COMPLETA", nullable = false, length = 65535)
	public String getDescrizioneCompleta() {
		return this.descrizioneCompleta;
	}

	public void setDescrizioneCompleta(String descrizioneCompleta) {
		this.descrizioneCompleta = descrizioneCompleta;
	}

	@Column(name = "PREZZO_INIZIALE", nullable = false, precision = 22, scale = 0)
	public double getPrezzoIniziale() {
		return this.prezzoIniziale;
	}

	public void setPrezzoIniziale(double prezzoIniziale) {
		this.prezzoIniziale = prezzoIniziale;
	}

	@Column(name = "ACCETTA_PROPOSTE_PREZZO", nullable = false)
	public boolean isAccettaPropostePrezzo() {
		return this.accettaPropostePrezzo;
	}

	public void setAccettaPropostePrezzo(boolean accettaPropostePrezzo) {
		this.accettaPropostePrezzo = accettaPropostePrezzo;
	}

	@Column(name = "VISIBILE_FREELANCER", nullable = false)
	public boolean isVisibileFreelancer() {
		return this.visibileFreelancer;
	}

	public void setVisibileFreelancer(boolean visibileFreelancer) {
		this.visibileFreelancer = visibileFreelancer;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "DATA_FINE_PREVISTA", length = 10)
	public Date getDataFinePrevista() {
		return this.dataFinePrevista;
	}

	public void setDataFinePrevista(Date dataFinePrevista) {
		this.dataFinePrevista = dataFinePrevista;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "TIMESTAMP_CREAZIONE", nullable = false, length = 19)
	public Date getTimestampCreazione() {
		return this.timestampCreazione;
	}

	public void setTimestampCreazione(Date timestampCreazione) {
		this.timestampCreazione = timestampCreazione;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "TIMESTAMP_MODIFICA", nullable = false, length = 19)
	public Date getTimestampModifica() {
		return this.timestampModifica;
	}

	public void setTimestampModifica(Date timestampModifica) {
		this.timestampModifica = timestampModifica;
	}

	@OneToOne(fetch = FetchType.LAZY, mappedBy = "utente")
	public StoricoProgetto getStoricoProgetto() {
		return this.storicoProgetto;
	}

	public void setStoricoProgetto(StoricoProgetto storicoProgetto) {
		this.storicoProgetto = storicoProgetto;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "progetto")
	public Set<Messaggio> getMessaggios() {
		return this.messaggios;
	}

	public void setMessaggios(Set<Messaggio> messaggios) {
		this.messaggios = messaggios;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "file_progetto", catalog = "db_inv_freel", joinColumns = {
			@JoinColumn(name = "ROW_ID_PROGETTO", referencedColumnName="ROW_ID", nullable = false, updatable = false) }, inverseJoinColumns = {
					@JoinColumn(name = "ROW_ID_FILE", referencedColumnName="ROW_ID", table = "file", nullable = false, updatable = false) })
	public Set<File> getFiles() {
		return this.files;
	}

	public void setFiles(Set<File> files) {
		this.files = files;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "progetto")
	public Set<StoricoPagamento> getStoricoPagamentos() {
		return this.storicoPagamentos;
	}

	public void setStoricoPagamentos(Set<StoricoPagamento> storicoPagamentos) {
		this.storicoPagamentos = storicoPagamentos;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "progetto")
	public Set<AnnuncioProgetto> getAnnuncioProgettos() {
		return this.annuncioProgettos;
	}

	public void setAnnuncioProgettos(Set<AnnuncioProgetto> annuncioProgettos) {
		this.annuncioProgettos = annuncioProgettos;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "progetto")
	public Set<Feedback> getFeedbacks() {
		return this.feedbacks;
	}

	public void setFeedbacks(Set<Feedback> feedbacks) {
		this.feedbacks = feedbacks;
	}

}
